[build-system]
requires = ["scikit-build-core", "nanobind"]
build-backend = "scikit_build_core.build"

[project]
name = "dufomap"
version = "0.3.0"
description = "DUFOMap Python bindings"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    { name = "Qingwen Zhang", email = "qzhangcb@connect.ust.hk" },
    { name = "Daniel Duberg", email = "dduberg@kth.se" },
]
classifiers = [
    "License :: OSI Approved :: BSD License",
]

# package_data = [
#     {'dufomap'= 'build/libdm_lib.so'},
#     {'glog'='build/glog/libglog.so'},
# ]

[project.urls]
urls = "https://github.com/KTH-RPL/dufomap"


[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"


[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Run pytest to ensure that the package was correctly built
test-command = "pytest {project}/tests"
test-requires = "pytest"

archs = ["auto64"]
# # Don't repair macOS wheels
# [tool.cibuildwheel.macos]
# repair-wheel-command = ""

# # Pass the `--lib-sdir .` flag to auditwheel on Linux
# [tool.cibuildwheel.linux]
# repair-wheel-command = "auditwheel repair --lib-sdir . -w {dest_dir} {wheel}"

# Needed for full C++17 support
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "10.14"
